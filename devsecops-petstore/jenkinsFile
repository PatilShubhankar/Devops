pipeline{
    agent any 
    tools {
        jdk 'jdk-17.0.8.1+1'
        maven 'maven3'
    }
    environment{
        SCANNER_HOME=tool 'sonar-scanner'
    }
    stages{
        stage('clean workspace'){
            steps{
                cleanWs()
            }
        }
        stage('checkout scm'){
            steps{
                git 'https://github.com/Aj7Ay/jpetstore-6.git'
            }
        }
        stage('maven compile'){
            steps{
                sh 'mvn clean compile'
            }
        }
        stage('maven test'){
            steps{
                sh 'mvn test'
            }
        }
        stage('Sonarqube Analysis'){
            steps{
                withSonarQubeEnv('sonar-server'){
                    sh '''
                    $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Petshop \
                    -Dsonar.java.binaries=. \
                    -Dsonar.projectKey=Petshop
                    '''
                }
            }
        }
        stage('quality-gate'){
            steps {
                script{
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token'
                }
            }
        }
        /*stage('Buildwar file'){
            steps{
                sh 'mvn clean install -DskipTests=true'
            }
        }
        stage("owasp-dependecy-check"){
            steps{
                dependencyCheck additionalArguments: '--scan ./ --format XML ', odcInstallation: 'DP-Check'
                dependencyCheckPublisher pattern: '**\/dependency-check-report.xml'
            }
        }*/
        stage ('Build and push to docker hub'){
            steps{
                script{
                    withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                        sh "docker build -t petshop ."
                        sh "docker tag petshop sevenajay/petshop:latest"
                        sh "docker push sevenajay/petshop:latest"
                   }
                }
            }
        }
        stage("TRIVY"){
            steps{
                sh "trivy image shubhankar1301/petshop:latest > trivy.txt"
            }
        }
        stage ('Deploy to container'){
            steps{
                sh 'docker run -d --name pet1 -p 8080:8080 sevenajay/petshop:latest'
            }
        }
    }
}